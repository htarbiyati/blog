[ { "title": "All About Templates", "url": "/posts/all-about-templates/", "categories": "cplusplus, programming", "tags": "cplusplus, programming", "date": "2021-01-03 02:20:11 +0000", "snippet": "This post is all about cplusplus Templates.Templates allow the reuse of code for different data types. An example of the use oftemplates is the C++ standard template library (or STL). This library is a set of templateclasses that provide generic containers and algorithms. The library can be used ..." }, { "title": "Neville Interpolation", "url": "/posts/neville-interpolation/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:16:34 +0000", "snippet": "clear%clcsyms(&#39;TRUE&#39;, &#39;FALSE&#39;, &#39;OK&#39;, &#39;FLAG&#39;, &#39;N&#39;, &#39;I&#39;, &#39;XX&#39;, &#39;Q&#39;, &#39;A&#39;, &#39;NAME&#39;);syms(&#39;INP&#39;, &#39;X&#39;, &#39;D&#39;, &#39;J&#39;, &#39;OUP&#39;,&#39;x&#39;,&#39;s&#39;);TRUE = 1;FALSE = 0;%fprintf(1,&#39;This ..." }, { "title": "Natural Cubic B-Spline", "url": "/posts/natural-cubic-b-spline/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:03:05 +0000", "snippet": "Code to find coefficients \\(a_{-1},a_0,a_1,\\dots,a_n,a_{n+1}\\) of Natural Cubic B-Spline with arbitrary step size \\(h\\)\\[S_3(x)=\\sum_{k=-1}^{n+1} a_k B_k(x)\\]clearclc%-----------------------------% Note that x &amp;amp; f vectors should have same lengthh = pi/3;x = [0 pi/3 2*pi/3 pi];f = [0 0.866..." }, { "title": "Newton Divided Difference", "url": "/posts/newton-divided-difference/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:02:18 +0000", "snippet": "% To obtain the divided-difference coefficients of the% interpolatory polynomial P on the (n+1) distinct numbers x(0),% x(1), ..., x(n) for the function f:% INPUT: numbers x(0), x(1), ..., x(n); values f(x(0)), f(x(1)),% ..., f(x(n)) as the first column Q(0,0), Q(1,0), ...,% Q(N,0) ..." }, { "title": "Hermite Interpolation", "url": "/posts/hermite-interpolation/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:01:54 +0000", "snippet": "% TO OBTAIN THE COEFFICIENTS OF THE HERMITE INTERPOLATING% POLYNOMIAL H ON THE (N+1) DISTINCT NUMBERS X(0), ..., X(N)% FOR THE FUNCTION F:%% INPUT: NUMBERS X(0), X(1), ..., X(N); VALUES F(X(0)), F(X(1)),% ..., F(X(N)) AND F&#39;(X(0)), F&#39;(X(1)), ..., F&#39;(X(N)).%% OUTPUT: NUMBER..." }, { "title": "Fast Fourier Transform", "url": "/posts/fast-fourier-transform/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:01:32 +0000", "snippet": "This post is incomplete" }, { "title": "Discrete Fourier Transform", "url": "/posts/discrete-fourier-transform/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:01:15 +0000", "snippet": "clear;clc;% Defining the function% N is the number of pointsf = @(t) exp(sin(t)+cos(t));N = 5;%%isOdd = 0;if mod(N,2)==0 n = N/2;else isOdd = 1; n = (N-1)/2;end%% For odd number of pointsif isOdd==1 t = zeros(1,2*n+1); a = zeros(1,n+1); b = zeros(1,n); for k=0:2*n t(k+1..." }, { "title": "Natural Cubic Spline", "url": "/posts/natural-cubic-spline/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 10:00:27 +0000", "snippet": "% To construct the cubic spline interpolant S for the function f,% defined at the numbers x(0) &amp;lt; x(1) &amp;lt; ... &amp;lt; x(n), satisfying% S&#39;&#39;(x(0)) = S&#39;&#39;(x(n)) = 0:%% INPUT: n; x(0), x(1), ..., x(n); either generate A(I) = f(x(I))% for I = 0, 1, ..., n or inp..." }, { "title": "Neville Type Algorithm", "url": "/posts/neville-type-algorithm/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 09:59:56 +0000", "snippet": "The funcT.m filefunction res=funcT(indexVector, x, f, POINT) i = indexVector(1); k = indexVector(2); n = length(x); if(k==-1) res = 0; elseif((i~=0 | i==0) &amp;amp; k==0) res = f(i+1); else % Added +1 to x(i) indices for avoiding the error! numerator..." }, { "title": "Inverse Difference Method", "url": "/posts/inverse-difference-method/", "categories": "numerical-analysis, matlab, programming", "tags": "numerical-analysis, matlab, programming", "date": "2021-01-02 09:59:37 +0000", "snippet": "The funcPhi.m file codefunction res = funcPhi(f, x) n = length(x); if(n&amp;gt;1) if(n==2) res = (x(1)-x(2))/(f(1)-f(2)); %if(isinf(res)) % res = inf; %end else % Suppose x = [0 1 2 3] then (x~=x(length(x)-1)) outputs [..." }, { "title": "Functional Anaylsis chapter 1 definitions and theorems", "url": "/posts/functional-anaylsis-chapter-1-definitions-and-theorems/", "categories": "functional-analysis", "tags": "functional-analysis", "date": "2020-12-19 17:56:11 +0000", "snippet": "Theorem 1.2.7 (Hölder’s inequality) Let \\(p&amp;gt;1,q&amp;gt;1\\) and \\(\\frac{1}{p}+\\frac{1}{q}=1\\). If \\((x_n) \\in l^p\\) and \\((y_n) \\in l^q\\), then\\[(\\sum_{n=1}^{\\infty}|x_n y_n|^p)^{\\frac{1}{p}} \\le (\\sum_{n=1}^{\\infty}|x_n|^p)^{\\frac{1}{p}} (\\sum_{n=1}^{\\infty}|y_n|^q)^{\\frac{1}{q}}\\]Theorem..." }, { "title": "Matlab Primer", "url": "/posts/matlab-primer/", "categories": "tutorial, matlab, programming", "tags": "tutorial, matlab, programming", "date": "2020-12-05 14:31:40 +0000", "snippet": "Editing and Debugging M-FilesStarting the Editor/DebuggerCreating and Editing M-Files with the Editor/DebuggerDebugging M-FilesPreferences for the Editor/DebuggerImproving M-File performance - the ProfilerWhat is Profiling?Viewing Profiler ResultsUsing NotebookNotebook BasicsDefining MATLAB Comma..." }, { "title": "Lagrange Interpolation", "url": "/posts/lagrange-interpolation/", "categories": "numerical-analysis", "tags": "numerical-analysis", "date": "2020-11-03 07:41:03 +0000", "snippet": "Theoretical Foundation: The Interpolation Formula of LagrangeIn what follows, we denote by \\(\\Pi_n\\) the set of all real or complex polynomials \\(P\\) whose degress do not exceed \\(n\\):\\[P(x)=a_0+a_1x+\\dots+a_nx^n\\]Theorem 2.1.1.1 1 For \\(n+1\\) arbitrary support points\\((x_i,f_i),\\hspace{8pt} i=0..." }, { "title": "Smooth Manifolds Chapter 1 Solved Exercises", "url": "/posts/smooth-manifolds-chapter-1-solved-exercises/", "categories": "manifold", "tags": "manifold", "date": "2020-11-03 06:40:34 +0000", "snippet": "Exercise 1.1 Show that equivalent definitions of manifolds are obtained if instead of allowing \\(U\\) to be homeomorphic to any open subset of \\(\\mathbb{R}^n\\), we require it to be homeomorphic to an open ball in \\(\\mathbb{R}^n\\), or to \\(\\mathbb{R}^n\\) itself.Open balls in \\(\\mathbb{R}^n\\) are..." } ]
